<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>angular-spring-boot-webapp</artifactId>

    <name>angular-spring-boot-webapp</name>
    <description>Demo project for Spring Boot</description>
    <version>0.2.0-SNAPSHOT</version>

    <!--tag::maven-springboot-include[] -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.6.RELEASE</version>
        <relativePath/>
        <!-- lookup parent from repository -->
    </parent>
    <!--end::maven-springboot-include[] -->

    <properties>
        <skipUnitTests>false</skipUnitTests>
        <skipITs>true</skipITs>
        <!-- java settings version -->
        <java.version>1.7</java.version>
        <lombok.version>1.16.16</lombok.version>
        <commons-httpclient.version>3.1</commons-httpclient.version>
        <commons-codec.version>1.10</commons-codec.version>
        <commons-io.version>1.3.2</commons-io.version>
        <rest-assurred.version>2.4.1</rest-assurred.version>
        <spring-fox.version>2.7.0</spring-fox.version>
        <mysql-connector.version>6.0.4</mysql-connector.version>
        <serenity.version>1.1.42</serenity.version>
        <threadCount.uitest>12</threadCount.uitest>
        <webdriver.driver>firefox</webdriver.driver>
        <zap-java-api.version>2.4.2</zap-java-api.version>
        <zaproxy-client.version>2.4-6</zaproxy-client.version>

        <!-- testing config -->
        <server.port>41180</server.port>
        <mysql.port>33306</mysql.port>
        <webdriver.base.url>http://localhost:9080/</webdriver.base.url>

        <!-- frontend dependendies -->
        <node.version>v6.10.3</node.version>
        <npm.version>3.10.10</npm.version>

        <!-- Maven Plugins -->
        <sql-maven-plugin.version>1.5</sql-maven-plugin.version>
        <flyway-maven-plugin.version>3.2.1</flyway-maven-plugin.version>
        <docker-maven-plugin.version>0.4.13</docker-maven-plugin.version>
        <frontend-maven-plugin.version>1.0</frontend-maven-plugin.version>
        <owasp-dependency-check.version>2.1.1</owasp-dependency-check.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>${commons-httpclient.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- tag::spring-devtools[] -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- end::spring-devtools[] -->
        <!-- tag::swagger-include[] -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${spring-fox.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${spring-fox.version}</version>
        </dependency>
        <!-- end::swagger-include[] -->
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${rest-assurred.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>json-path</artifactId>
            <version>${rest-assurred.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.serenity-bdd</groupId>
            <artifactId>serenity-core</artifactId>
            <version>${serenity.version}</version>
            <scope>test</scope>
            <exclusions>
                <!-- Need to exclude for servlet API, see https://groups.google.com/forum/#!topic/thucydides-users/HwfhPGseucI-->
                <exclusion>
                    <groupId>net.sourceforge.htmlunit</groupId>
                    <artifactId>htmlunit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- tag::zap-java-maven[] -->
        <dependency>
            <groupId>net.continuumsecurity</groupId>
            <artifactId>zap-java-api</artifactId>
            <version>${zap-java-api.version}</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/libs/proxy-2.4.2-SNAPSHOT.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>org.owasp</groupId>
            <artifactId>zaproxy-client-api</artifactId>
            <version>${zaproxy-client.version}</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/libs/zap-api-2.4-v6.jar</systemPath>
        </dependency>
        <!-- end::zap-java-maven[] -->
        <dependency>
            <groupId>net.serenity-bdd</groupId>
            <artifactId>serenity-junit</artifactId>
            <version>${serenity.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>clean install</defaultGoal>
        <finalName>ng-spring-boot</finalName>
        <plugins>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <configuration>
                    <format>ALL</format>
                    <skipTestScope>true</skipTestScope>
                    <suppressionFiles>
                        <suppressionFile>${project.basedir}/dependency-check-suppressions.xml</suppressionFile>
                    </suppressionFiles>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- tag::frontend-maven-plugin[] -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>${frontend-maven-plugin.version}</version>
                <configuration>
                    <workingDirectory>${project.basedir}</workingDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <nodeVersion>${node.version}</nodeVersion>
                            <npmVersion>${npm.version}</npmVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                    <execution>
                        <id>npm build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run build</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>javascript unit tests</id>
                        <goals>
                            <goal>grunt</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <arguments>unit-tests-ci</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- end::frontend-maven-plugin[] -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>bower_components</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>node_modules</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>src/main/resources/static</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <!-- tag::frontend-maven-plugin[] -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-angular-files</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>src/main/resources/static</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>target/dist</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- end::frontend-maven-plugin[] -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>${skipUnitTests}</skipTests>
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <skipTests>${skipITs}</skipTests>
                            <includes>
                                <include>**/*IT.class</include>
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>ui-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the VM argument line used when unit tests are run. -->
                            <argLine>${failsafeArgLine}</argLine>
                            <skipTests>${skipITs}</skipTests>
                            <includes>
                                <include>**/*SerenityIT.class</include>
                            </includes>
                            <threadCount>${threadCount.uitest}</threadCount>
                            <parallel>classes</parallel>
                            <systemPropertyVariables>
                                <webdriver.driver>${webdriver.driver}</webdriver.driver>
                                <webdriver.base.url>${webdriver.base.url}</webdriver.base.url>
                                <serenity.issue.tracker.url>
                                    https://github.com/hypery2k/angular-spring-boot-sample/issues{0}
                                </serenity.issue.tracker.url>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway-maven-plugin.version}</version>
                <configuration>
                    <url>jdbc:mysql://33.33.33.10:3306/NGSPRING</url>
                    <user>ngspring</user>
                    <password>password</password>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.serenity-bdd.maven.plugins</groupId>
                <artifactId>serenity-maven-plugin</artifactId>
                <version>${serenity.version}</version>
                <configuration>
                    <outputDirectory>${basedir}/target/site/serenity/</outputDirectory>
                    <sourceDirectory>${basedir}/target/site/serenity/</sourceDirectory>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>net.serenity-bdd</groupId>
                        <artifactId>serenity-core</artifactId>
                        <version>${serenity.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>serenity-reports</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>aggregate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- tag::docker-maven-plugin[] -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <imageName>continuous-delivery/demo</imageName>
                    <baseImage>anapsix/alpine-java:8</baseImage>
                    <!-- @formatter:off -->
            <entryPoint>["java", "-Djava.security.egd=file:/dev/./urandom", "-jar", "/${project.build.finalName}.jar","--flyway.url=jdbc:mysql://db/NGSPRING?useUnicode=true&amp;characterEncoding=utf8","--spring.datasource.url=jdbc:mysql://db/NGSPRING?useUnicode=true&amp;characterEncoding=utf8","--server.port=${server.port}"]</entryPoint>
            <!-- @formatter:on -->
                    <!-- copy the service's jar file from target into the root directory of the image -->
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
            <!-- end::docker-maven-plugin[] -->
        </plugins>
        <!-- tag::docker-maven-plugin[] -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <!-- end::docker-maven-plugin[] -->
    </build>
    <profiles>
        <profile>
            <id>securityCheck</id>
            <properties>
                <skipUnitTests>true</skipUnitTests>
                <skipITs>true</skipITs>
                <skipTests>true</skipTests>
            </properties>
            <build>
                <plugins>
                    <!-- tag::owasp-maven-include[] -->
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <configuration>
                            <failBuildOnCVSS>5</failBuildOnCVSS>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- end::owasp-maven-include[] -->
                    <!-- tag::nsp-maven-include[] -->
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>${frontend-maven-plugin.version}</version>
                        <configuration>
                            <workingDirectory>${project.basedir}</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>install node and npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <nodeVersion>${node.version}</nodeVersion>
                                    <npmVersion>${npm.version}</npmVersion>
                                </configuration>
                            </execution>
                            <execution>
                                <id>npm check</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>run check</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- end::nsp-maven-include[] -->
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker</id>
            <properties>
                <skipITs>false</skipITs>
                <webdriver.base.url>http://localhost:${server.port}/</webdriver.base.url>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>mysql</groupId>
                                <artifactId>mysql-connector-java</artifactId>
                                <version>${mysql-connector.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <url>
                                <![CDATA[jdbc:mysql://localhost:${mysql.port}/NGSPRING?useUnicode=true&characterEncoding=utf8]]></url>
                            <username>ngspring</username>
                            <password>password</password>
                        </configuration>
                        <executions>
                            <execution>
                                <id>create-data</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <orderFile>ascending</orderFile>
                                    <fileset>
                                        <basedir>${basedir}/src/test/resources/setup</basedir>
                                        <includes>
                                            <include>test.sql</include>
                                        </includes>
                                    </fileset>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- Add Spring repositories -->
    <!-- (you don't need this if you are using a .RELEASE version) -->
    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <url>http://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <url>http://repo.spring.io/milestone</url>
        </repository>
    </repositories>

</project>
